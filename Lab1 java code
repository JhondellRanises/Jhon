package directorymanagementsystem;

import java.io.File;
import java.util.Scanner;

public class DirectoryManagementSystem {

    public static void main(String[] args) {
        Scanner keyboard = new Scanner(System.in);
        String Directory = System.getProperty("user.dir");

        while (true) {
            System.out.println("\nMAIN MENU");
            System.out.println("----------------------");
            System.out.println("1. List files in the current directory");
            System.out.println("2. Create a new directory");
            System.out.println("3. Change the working directory");
            System.out.println("4. Exit");
            System.out.print("Enter your choice: ");
            int choice = keyboard.nextInt();
            keyboard.nextLine();

            if (choice == 1) {
                System.out.println("\nLIST FILE MENU");
                System.out.println("----------------------");
                System.out.println("1. List all files");
                System.out.println("2. List files by extension");
                System.out.println("3. List files by pattern");
                System.out.print("Enter your choice: ");
                int subChoice = keyboard.nextInt();
                keyboard.nextLine();

                if (subChoice == 1) {
                    File list = new File(Directory);
                    File[] files = list.listFiles();

                    if (files == null || files.length == 0) {
                        System.out.println("No files found in the directory.");
                    } else {
                        System.out.println("\nList of All Files:");
                        for (File file : files) {
                            if (file.isFile()) {
                                System.out.println(file.getName());
                            }
                        }
                        System.out.println("Total Files: " + files.length);
                    }

                } else {
                    System.out.println("Invalid choice, please try again.");
                }

            } else if (choice == 2) {
                System.out.print("Enter the name of the new directory: ");
                String directoryName = keyboard.nextLine();
                File newDirectory = new File(Directory + File.separator + directoryName);

                if (newDirectory.exists()) {
                    System.out.println("Directory " + directoryName + " already exists.");
                } else {
                    if (newDirectory.mkdir()) {
                        System.out.println("Directory " + directoryName + " created successfully.");
                    } else {
                        System.out.println("Failed to create directory " + directoryName + ".");
                    }
                }

            } else if (choice == 3) {
                System.out.println("\nCHANGE DIRECTORY MENU");
                System.out.println("----------------------");
                System.out.println("1. Step by step Backward");
                System.out.println("2. Goto root directory");
                System.out.println("3. Forward directory");
                System.out.print("Enter your choice: ");
                int changeChoice = keyboard.nextInt();
                keyboard.nextLine();

                if (changeChoice == 3) {

                    System.out.print("Please enter the Directory Name: ");
                    String newDirName = keyboard.nextLine();
                    File newDir = new File(Directory + File.separator + newDirName);
                    if (newDir.exists() && newDir.isDirectory()) {
                        return;

                    } else {
                        System.out.println("Current Directory: C: /Users/UserName/Documents/Projects");
                    }
                }

            } else if (choice == 4) {
                System.out.println("Exiting...");
                keyboard.close();
                return;
            } else {
                System.out.println("Invalid choice, please try again.");
            }
        }
    }
}
